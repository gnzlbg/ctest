dist: trusty
sudo: false
language: rust

matrix:
  fast_finish: true
  include:
    # Linux 
    - name: "stable"
      rust: stable
      env: TARGET=x86_64-unknown-linux-gnu
      install: true
    - name: "beta"
      rust: beta
      env: TARGET=x86_64-unknown-linux-gnu
      install: true
    - name: "nightly"
      rust: nightly
      env: TARGET=x86_64-unknown-linux-gnu
      after_success: travis-cargo --only nightly doc-upload
      install: true
    - name: "libc-test (linux)"
      rust: nightly
      env: TARGET=x86_64-unknown-linux-gnu
      script: ci/run-docker.sh ${TARGET}
      install: true

    # MacOS X
    - name: "libc-test (osx)"
      rust: nightly
      env: TARGET=x86_64-apple-darwin
      os: osx
      osx_image: xcode9.4
      install: true

    # Windows
    - name: "x86_64-pc-windows-gnu"
      env: TARGET=x86_64-pc-windows-gnu
      os: windows
    - name: "i686-pc-windows-gnu"
      env: TARGET=i686-pc-windows-gnu PATH=$PATH:/c/Program\ Files\ (x86)/Rust/bin:/c/msys64/mingw32/bin
      os: windows
    - name: "x86_64-pc-windows-msvc"
      env: TARGET=x86_64-pc-windows-msvc
      install: true
      os: windows
    - name: "i686-pc-windows-msvc"
      env: TARGET=i686-pc-windows-msvc
      os: windows

    # Tooling
    - name: "rustfmt"
      install: true
      rust: nightly
      before_script: rustup component add rustfmt-preview
      script: cargo fmt --all -- --check
    - name: "clippy"
      install: true
      rust: nightly
      before_script: rustup component add clippy-preview
      script: cargo clippy -- -D clippy::pedantic

install: rustup target add ${TARGET} 
script: ci/run.sh

notifications:
  email:
    on_success: never
env:
  global:
    secure: "pi/iZrNlMDZdk/wNhxGKwrAe6qqBT4eTYZfTRWl+t+rEIehcVWgIFwpr4jdcVytPqCgNEo7g7bKatXAZQH1jQsqPocis46BfDyTUkIPvQFIqOXmweHqZA1XMXHlU/Dj3GhZyH4IgRfVV+LxPAvM8D/CZcNEEAQmkD1R1o029c3UuweRCD6jFpnSIUpQ0kH5v/vpjLieL9E7RgFasUhB2YwDMmvJF5m6vBlq5/wBVa+/kAgyHaP/i/7hc2RMF1FCmwTB0LpRlAEj5XdFFbyIQPOosk2oCJ+dPDb5oAZyZDmXM6yfxHhgeX1Y2g13rP3J1NCRpQOESlOSwjTEch9HnJZiDsWnM0by2+gOdy4oZyN1P43aRFWOz+tm+oxXEhhpFrx2qPX75zwsqbv5TTA+1458vLkLgJmAuFgWwCxqzIHvb6i0+RzgPmD7cAm39Pajt332sEWbJY59cLOLIFfkO6btsU2iEBqT+EhDq9NQHlp/qHqG0xTo1T9GTK5Lla8wUESlzl8Hxen6IuSGAzuWEFWQtYyrIbfEVQPdLkNTiqJueQeG/CEs31AU2Yxjv59HSvQ+S+soBqRVYmvtQZMtUMAE412Gv0/xkd1oGQCI7VIUNjTBCi+89mZuqVbBxjTIKpUUhX90dyl+Vn97nGH7sh2gOayHGXP/Dts5UZlG/5vE="
